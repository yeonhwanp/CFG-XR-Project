syntax = "proto3";

// NOTE: Add features: Fixed or not fixed (root), add revolute joint for the world or 6DOF (if it's not fixed)

// This is for joint positions (for now)
message PositionList {
	repeated PositionStorage PList = 1;
}

message PositionStorage {
	float Rotation = 1;
	float Velocity = 2;
}

// This is for robot configuration (for now)
message RobotStructure {
	int32 rootJointID = 1;
	map<int32, JointStorage> JointDict = 2;
	map<int32, LinkStorage> linkDict = 3;
}

message JointStorage {
	repeated float PositionParams = 1; //Make a vec3d message
	repeated float RotationParams = 2; //Make a vec3d message
	repeated float AxisParams = 3; //Make a vec3d message
	repeated int32 ChildrenJoints = 4;
	int32 ChildrenLink = 5;
	int32 ParentLink = 6;
	JointStorage Parent = 7;
}

message LinkStorage {
	repeated float PositionParams = 1; //Make a vec3d message
	repeated float RotationParams = 2; //Make a vec3d message
	repeated float CenterofMassParams = 3;
	repeated float ITParams = 4;
	float mass = 5;
	ObjectSpecs shape = 6;
}

message ObjectSpecs {
	string Type = 1; //enum
	repeated float ScaleParams = 2; //Add some documentation saying prarameters for each supported type
}

message Vector3d{
	float x = 1;
	float y = 2;
	float z = 3;
}

// Mesh stuff
message MeshList{
	repeated MeshProto Meshes = 1;
}

message MeshProto {
	map<int32, ProtoVector3> Vertices = 1;
	repeated int32 Triangles = 2;
}

message ProtoVector3 {
	float X = 1;
	float Y = 2;
	float Z = 3;
}
