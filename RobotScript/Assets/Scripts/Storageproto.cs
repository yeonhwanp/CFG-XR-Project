// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: storageproto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from storageproto.proto</summary>
public static partial class StorageprotoReflection {

  #region Descriptor
  /// <summary>File descriptor for storageproto.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static StorageprotoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJzdG9yYWdlcHJvdG8ucHJvdG8iLwoMUG9zaXRpb25MaXN0Eh8KBVBMaXN0",
          "GAEgAygLMhAuUG9zaXRpb25TdG9yYWdlIjUKD1Bvc2l0aW9uU3RvcmFnZRIQ",
          "CghSb3RhdGlvbhgBIAEoAhIQCghWZWxvY2l0eRgCIAEoAmIGcHJvdG8z"));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PositionList), global::PositionList.Parser, new[]{ "PList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PositionStorage), global::PositionStorage.Parser, new[]{ "Rotation", "Velocity" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
public sealed partial class PositionList : pb::IMessage<PositionList> {
  private static readonly pb::MessageParser<PositionList> _parser = new pb::MessageParser<PositionList>(() => new PositionList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PositionList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionList(PositionList other) : this() {
    pList_ = other.pList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionList Clone() {
    return new PositionList(this);
  }

  /// <summary>Field number for the "PList" field.</summary>
  public const int PListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PositionStorage> _repeated_pList_codec
      = pb::FieldCodec.ForMessage(10, global::PositionStorage.Parser);
  private readonly pbc::RepeatedField<global::PositionStorage> pList_ = new pbc::RepeatedField<global::PositionStorage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PositionStorage> PList {
    get { return pList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PositionList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PositionList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!pList_.Equals(other.pList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= pList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    pList_.WriteTo(output, _repeated_pList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += pList_.CalculateSize(_repeated_pList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PositionList other) {
    if (other == null) {
      return;
    }
    pList_.Add(other.pList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          pList_.AddEntriesFrom(input, _repeated_pList_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class PositionStorage : pb::IMessage<PositionStorage> {
  private static readonly pb::MessageParser<PositionStorage> _parser = new pb::MessageParser<PositionStorage>(() => new PositionStorage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PositionStorage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionStorage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionStorage(PositionStorage other) : this() {
    rotation_ = other.rotation_;
    velocity_ = other.velocity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionStorage Clone() {
    return new PositionStorage(this);
  }

  /// <summary>Field number for the "Rotation" field.</summary>
  public const int RotationFieldNumber = 1;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "Velocity" field.</summary>
  public const int VelocityFieldNumber = 2;
  private float velocity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Velocity {
    get { return velocity_; }
    set {
      velocity_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PositionStorage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PositionStorage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Velocity, other.Velocity)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Velocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Velocity);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Rotation != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Rotation);
    }
    if (Velocity != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Velocity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Velocity != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PositionStorage other) {
    if (other == null) {
      return;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Velocity != 0F) {
      Velocity = other.Velocity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Rotation = input.ReadFloat();
          break;
        }
        case 21: {
          Velocity = input.ReadFloat();
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
