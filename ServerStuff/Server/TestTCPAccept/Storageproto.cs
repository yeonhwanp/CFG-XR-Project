// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: storageproto.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
/// <summary>Holder for reflection information generated from storageproto.proto</summary>
public static partial class StorageprotoReflection {

  #region Descriptor
  /// <summary>File descriptor for storageproto.proto</summary>
  public static pbr::FileDescriptor Descriptor {
    get { return descriptor; }
  }
  private static pbr::FileDescriptor descriptor;

  static StorageprotoReflection() {
    byte[] descriptorData = global::System.Convert.FromBase64String(
        string.Concat(
          "ChJzdG9yYWdlcHJvdG8ucHJvdG8iLwoMUG9zaXRpb25MaXN0Eh8KBVBMaXN0",
          "GAEgAygLMhAuUG9zaXRpb25TdG9yYWdlIjUKD1Bvc2l0aW9uU3RvcmFnZRIQ",
          "CghSb3RhdGlvbhgBIAEoAhIQCghWZWxvY2l0eRgCIAEoAiKJAgoOUm9ib3RT",
          "dHJ1Y3R1cmUSEwoLcm9vdEpvaW50SUQYASABKAUSMQoJSm9pbnREaWN0GAIg",
          "AygLMh4uUm9ib3RTdHJ1Y3R1cmUuSm9pbnREaWN0RW50cnkSLwoIbGlua0Rp",
          "Y3QYAyADKAsyHS5Sb2JvdFN0cnVjdHVyZS5MaW5rRGljdEVudHJ5Gj8KDkpv",
          "aW50RGljdEVudHJ5EgsKA2tleRgBIAEoBRIcCgV2YWx1ZRgCIAEoCzINLkpv",
          "aW50U3RvcmFnZToCOAEaPQoNTGlua0RpY3RFbnRyeRILCgNrZXkYASABKAUS",
          "GwoFdmFsdWUYAiABKAsyDC5MaW5rU3RvcmFnZToCOAEiswEKDEpvaW50U3Rv",
          "cmFnZRIWCg5Qb3NpdGlvblBhcmFtcxgBIAMoAhIWCg5Sb3RhdGlvblBhcmFt",
          "cxgCIAMoAhISCgpBeGlzUGFyYW1zGAMgAygCEhYKDkNoaWxkcmVuSm9pbnRz",
          "GAQgAygFEhQKDENoaWxkcmVuTGluaxgFIAEoBRISCgpQYXJlbnRMaW5rGAYg",
          "ASgFEh0KBlBhcmVudBgHIAEoCzINLkpvaW50U3RvcmFnZSKWAQoLTGlua1N0",
          "b3JhZ2USFgoOUG9zaXRpb25QYXJhbXMYASADKAISFgoOUm90YXRpb25QYXJh",
          "bXMYAiADKAISGgoSQ2VudGVyb2ZNYXNzUGFyYW1zGAMgAygCEhAKCElUUGFy",
          "YW1zGAQgAygCEgwKBG1hc3MYBSABKAISGwoFc2hhcGUYBiABKAsyDC5PYmpl",
          "Y3RTcGVjcyIwCgtPYmplY3RTcGVjcxIMCgRUeXBlGAEgASgJEhMKC1NjYWxl",
          "UGFyYW1zGAIgAygCYgZwcm90bzM="));
    descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
        new pbr::FileDescriptor[] { },
        new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
          new pbr::GeneratedClrTypeInfo(typeof(global::PositionList), global::PositionList.Parser, new[]{ "PList" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::PositionStorage), global::PositionStorage.Parser, new[]{ "Rotation", "Velocity" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::RobotStructure), global::RobotStructure.Parser, new[]{ "RootJointID", "JointDict", "LinkDict" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, }),
          new pbr::GeneratedClrTypeInfo(typeof(global::JointStorage), global::JointStorage.Parser, new[]{ "PositionParams", "RotationParams", "AxisParams", "ChildrenJoints", "ChildrenLink", "ParentLink", "Parent" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::LinkStorage), global::LinkStorage.Parser, new[]{ "PositionParams", "RotationParams", "CenterofMassParams", "ITParams", "Mass", "Shape" }, null, null, null),
          new pbr::GeneratedClrTypeInfo(typeof(global::ObjectSpecs), global::ObjectSpecs.Parser, new[]{ "Type", "ScaleParams" }, null, null, null)
        }));
  }
  #endregion

}
#region Messages
/// <summary>
/// This is for joint positions (for now)
/// </summary>
public sealed partial class PositionList : pb::IMessage<PositionList> {
  private static readonly pb::MessageParser<PositionList> _parser = new pb::MessageParser<PositionList>(() => new PositionList());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PositionList> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[0]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionList() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionList(PositionList other) : this() {
    pList_ = other.pList_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionList Clone() {
    return new PositionList(this);
  }

  /// <summary>Field number for the "PList" field.</summary>
  public const int PListFieldNumber = 1;
  private static readonly pb::FieldCodec<global::PositionStorage> _repeated_pList_codec
      = pb::FieldCodec.ForMessage(10, global::PositionStorage.Parser);
  private readonly pbc::RepeatedField<global::PositionStorage> pList_ = new pbc::RepeatedField<global::PositionStorage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<global::PositionStorage> PList {
    get { return pList_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PositionList);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PositionList other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!pList_.Equals(other.pList_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= pList_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    pList_.WriteTo(output, _repeated_pList_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += pList_.CalculateSize(_repeated_pList_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PositionList other) {
    if (other == null) {
      return;
    }
    pList_.Add(other.pList_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          pList_.AddEntriesFrom(input, _repeated_pList_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class PositionStorage : pb::IMessage<PositionStorage> {
  private static readonly pb::MessageParser<PositionStorage> _parser = new pb::MessageParser<PositionStorage>(() => new PositionStorage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<PositionStorage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[1]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionStorage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionStorage(PositionStorage other) : this() {
    rotation_ = other.rotation_;
    velocity_ = other.velocity_;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public PositionStorage Clone() {
    return new PositionStorage(this);
  }

  /// <summary>Field number for the "Rotation" field.</summary>
  public const int RotationFieldNumber = 1;
  private float rotation_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Rotation {
    get { return rotation_; }
    set {
      rotation_ = value;
    }
  }

  /// <summary>Field number for the "Velocity" field.</summary>
  public const int VelocityFieldNumber = 2;
  private float velocity_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Velocity {
    get { return velocity_; }
    set {
      velocity_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as PositionStorage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(PositionStorage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Rotation, other.Rotation)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Velocity, other.Velocity)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Rotation != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Rotation);
    if (Velocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Velocity);
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Rotation != 0F) {
      output.WriteRawTag(13);
      output.WriteFloat(Rotation);
    }
    if (Velocity != 0F) {
      output.WriteRawTag(21);
      output.WriteFloat(Velocity);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Rotation != 0F) {
      size += 1 + 4;
    }
    if (Velocity != 0F) {
      size += 1 + 4;
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(PositionStorage other) {
    if (other == null) {
      return;
    }
    if (other.Rotation != 0F) {
      Rotation = other.Rotation;
    }
    if (other.Velocity != 0F) {
      Velocity = other.Velocity;
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 13: {
          Rotation = input.ReadFloat();
          break;
        }
        case 21: {
          Velocity = input.ReadFloat();
          break;
        }
      }
    }
  }

}

/// <summary>
/// This is for robot configuration (for now)
/// </summary>
public sealed partial class RobotStructure : pb::IMessage<RobotStructure> {
  private static readonly pb::MessageParser<RobotStructure> _parser = new pb::MessageParser<RobotStructure>(() => new RobotStructure());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<RobotStructure> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[2]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RobotStructure() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RobotStructure(RobotStructure other) : this() {
    rootJointID_ = other.rootJointID_;
    jointDict_ = other.jointDict_.Clone();
    linkDict_ = other.linkDict_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public RobotStructure Clone() {
    return new RobotStructure(this);
  }

  /// <summary>Field number for the "rootJointID" field.</summary>
  public const int RootJointIDFieldNumber = 1;
  private int rootJointID_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int RootJointID {
    get { return rootJointID_; }
    set {
      rootJointID_ = value;
    }
  }

  /// <summary>Field number for the "JointDict" field.</summary>
  public const int JointDictFieldNumber = 2;
  private static readonly pbc::MapField<int, global::JointStorage>.Codec _map_jointDict_codec
      = new pbc::MapField<int, global::JointStorage>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::JointStorage.Parser), 18);
  private readonly pbc::MapField<int, global::JointStorage> jointDict_ = new pbc::MapField<int, global::JointStorage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::JointStorage> JointDict {
    get { return jointDict_; }
  }

  /// <summary>Field number for the "linkDict" field.</summary>
  public const int LinkDictFieldNumber = 3;
  private static readonly pbc::MapField<int, global::LinkStorage>.Codec _map_linkDict_codec
      = new pbc::MapField<int, global::LinkStorage>.Codec(pb::FieldCodec.ForInt32(8), pb::FieldCodec.ForMessage(18, global::LinkStorage.Parser), 26);
  private readonly pbc::MapField<int, global::LinkStorage> linkDict_ = new pbc::MapField<int, global::LinkStorage>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::MapField<int, global::LinkStorage> LinkDict {
    get { return linkDict_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as RobotStructure);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(RobotStructure other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (RootJointID != other.RootJointID) return false;
    if (!JointDict.Equals(other.JointDict)) return false;
    if (!LinkDict.Equals(other.LinkDict)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (RootJointID != 0) hash ^= RootJointID.GetHashCode();
    hash ^= JointDict.GetHashCode();
    hash ^= LinkDict.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (RootJointID != 0) {
      output.WriteRawTag(8);
      output.WriteInt32(RootJointID);
    }
    jointDict_.WriteTo(output, _map_jointDict_codec);
    linkDict_.WriteTo(output, _map_linkDict_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (RootJointID != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(RootJointID);
    }
    size += jointDict_.CalculateSize(_map_jointDict_codec);
    size += linkDict_.CalculateSize(_map_linkDict_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(RobotStructure other) {
    if (other == null) {
      return;
    }
    if (other.RootJointID != 0) {
      RootJointID = other.RootJointID;
    }
    jointDict_.Add(other.jointDict_);
    linkDict_.Add(other.linkDict_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 8: {
          RootJointID = input.ReadInt32();
          break;
        }
        case 18: {
          jointDict_.AddEntriesFrom(input, _map_jointDict_codec);
          break;
        }
        case 26: {
          linkDict_.AddEntriesFrom(input, _map_linkDict_codec);
          break;
        }
      }
    }
  }

}

public sealed partial class JointStorage : pb::IMessage<JointStorage> {
  private static readonly pb::MessageParser<JointStorage> _parser = new pb::MessageParser<JointStorage>(() => new JointStorage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<JointStorage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[3]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JointStorage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JointStorage(JointStorage other) : this() {
    positionParams_ = other.positionParams_.Clone();
    rotationParams_ = other.rotationParams_.Clone();
    axisParams_ = other.axisParams_.Clone();
    childrenJoints_ = other.childrenJoints_.Clone();
    childrenLink_ = other.childrenLink_;
    parentLink_ = other.parentLink_;
    parent_ = other.parent_ != null ? other.parent_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public JointStorage Clone() {
    return new JointStorage(this);
  }

  /// <summary>Field number for the "PositionParams" field.</summary>
  public const int PositionParamsFieldNumber = 1;
  private static readonly pb::FieldCodec<float> _repeated_positionParams_codec
      = pb::FieldCodec.ForFloat(10);
  private readonly pbc::RepeatedField<float> positionParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> PositionParams {
    get { return positionParams_; }
  }

  /// <summary>Field number for the "RotationParams" field.</summary>
  public const int RotationParamsFieldNumber = 2;
  private static readonly pb::FieldCodec<float> _repeated_rotationParams_codec
      = pb::FieldCodec.ForFloat(18);
  private readonly pbc::RepeatedField<float> rotationParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> RotationParams {
    get { return rotationParams_; }
  }

  /// <summary>Field number for the "AxisParams" field.</summary>
  public const int AxisParamsFieldNumber = 3;
  private static readonly pb::FieldCodec<float> _repeated_axisParams_codec
      = pb::FieldCodec.ForFloat(26);
  private readonly pbc::RepeatedField<float> axisParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> AxisParams {
    get { return axisParams_; }
  }

  /// <summary>Field number for the "ChildrenJoints" field.</summary>
  public const int ChildrenJointsFieldNumber = 4;
  private static readonly pb::FieldCodec<int> _repeated_childrenJoints_codec
      = pb::FieldCodec.ForInt32(34);
  private readonly pbc::RepeatedField<int> childrenJoints_ = new pbc::RepeatedField<int>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<int> ChildrenJoints {
    get { return childrenJoints_; }
  }

  /// <summary>Field number for the "ChildrenLink" field.</summary>
  public const int ChildrenLinkFieldNumber = 5;
  private int childrenLink_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ChildrenLink {
    get { return childrenLink_; }
    set {
      childrenLink_ = value;
    }
  }

  /// <summary>Field number for the "ParentLink" field.</summary>
  public const int ParentLinkFieldNumber = 6;
  private int parentLink_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int ParentLink {
    get { return parentLink_; }
    set {
      parentLink_ = value;
    }
  }

  /// <summary>Field number for the "Parent" field.</summary>
  public const int ParentFieldNumber = 7;
  private global::JointStorage parent_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::JointStorage Parent {
    get { return parent_; }
    set {
      parent_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as JointStorage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(JointStorage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!positionParams_.Equals(other.positionParams_)) return false;
    if(!rotationParams_.Equals(other.rotationParams_)) return false;
    if(!axisParams_.Equals(other.axisParams_)) return false;
    if(!childrenJoints_.Equals(other.childrenJoints_)) return false;
    if (ChildrenLink != other.ChildrenLink) return false;
    if (ParentLink != other.ParentLink) return false;
    if (!object.Equals(Parent, other.Parent)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= positionParams_.GetHashCode();
    hash ^= rotationParams_.GetHashCode();
    hash ^= axisParams_.GetHashCode();
    hash ^= childrenJoints_.GetHashCode();
    if (ChildrenLink != 0) hash ^= ChildrenLink.GetHashCode();
    if (ParentLink != 0) hash ^= ParentLink.GetHashCode();
    if (parent_ != null) hash ^= Parent.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    positionParams_.WriteTo(output, _repeated_positionParams_codec);
    rotationParams_.WriteTo(output, _repeated_rotationParams_codec);
    axisParams_.WriteTo(output, _repeated_axisParams_codec);
    childrenJoints_.WriteTo(output, _repeated_childrenJoints_codec);
    if (ChildrenLink != 0) {
      output.WriteRawTag(40);
      output.WriteInt32(ChildrenLink);
    }
    if (ParentLink != 0) {
      output.WriteRawTag(48);
      output.WriteInt32(ParentLink);
    }
    if (parent_ != null) {
      output.WriteRawTag(58);
      output.WriteMessage(Parent);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += positionParams_.CalculateSize(_repeated_positionParams_codec);
    size += rotationParams_.CalculateSize(_repeated_rotationParams_codec);
    size += axisParams_.CalculateSize(_repeated_axisParams_codec);
    size += childrenJoints_.CalculateSize(_repeated_childrenJoints_codec);
    if (ChildrenLink != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ChildrenLink);
    }
    if (ParentLink != 0) {
      size += 1 + pb::CodedOutputStream.ComputeInt32Size(ParentLink);
    }
    if (parent_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parent);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(JointStorage other) {
    if (other == null) {
      return;
    }
    positionParams_.Add(other.positionParams_);
    rotationParams_.Add(other.rotationParams_);
    axisParams_.Add(other.axisParams_);
    childrenJoints_.Add(other.childrenJoints_);
    if (other.ChildrenLink != 0) {
      ChildrenLink = other.ChildrenLink;
    }
    if (other.ParentLink != 0) {
      ParentLink = other.ParentLink;
    }
    if (other.parent_ != null) {
      if (parent_ == null) {
        parent_ = new global::JointStorage();
      }
      Parent.MergeFrom(other.Parent);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          positionParams_.AddEntriesFrom(input, _repeated_positionParams_codec);
          break;
        }
        case 18:
        case 21: {
          rotationParams_.AddEntriesFrom(input, _repeated_rotationParams_codec);
          break;
        }
        case 26:
        case 29: {
          axisParams_.AddEntriesFrom(input, _repeated_axisParams_codec);
          break;
        }
        case 34:
        case 32: {
          childrenJoints_.AddEntriesFrom(input, _repeated_childrenJoints_codec);
          break;
        }
        case 40: {
          ChildrenLink = input.ReadInt32();
          break;
        }
        case 48: {
          ParentLink = input.ReadInt32();
          break;
        }
        case 58: {
          if (parent_ == null) {
            parent_ = new global::JointStorage();
          }
          input.ReadMessage(parent_);
          break;
        }
      }
    }
  }

}

public sealed partial class LinkStorage : pb::IMessage<LinkStorage> {
  private static readonly pb::MessageParser<LinkStorage> _parser = new pb::MessageParser<LinkStorage>(() => new LinkStorage());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<LinkStorage> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[4]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LinkStorage() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LinkStorage(LinkStorage other) : this() {
    positionParams_ = other.positionParams_.Clone();
    rotationParams_ = other.rotationParams_.Clone();
    centerofMassParams_ = other.centerofMassParams_.Clone();
    iTParams_ = other.iTParams_.Clone();
    mass_ = other.mass_;
    shape_ = other.shape_ != null ? other.shape_.Clone() : null;
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public LinkStorage Clone() {
    return new LinkStorage(this);
  }

  /// <summary>Field number for the "PositionParams" field.</summary>
  public const int PositionParamsFieldNumber = 1;
  private static readonly pb::FieldCodec<float> _repeated_positionParams_codec
      = pb::FieldCodec.ForFloat(10);
  private readonly pbc::RepeatedField<float> positionParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> PositionParams {
    get { return positionParams_; }
  }

  /// <summary>Field number for the "RotationParams" field.</summary>
  public const int RotationParamsFieldNumber = 2;
  private static readonly pb::FieldCodec<float> _repeated_rotationParams_codec
      = pb::FieldCodec.ForFloat(18);
  private readonly pbc::RepeatedField<float> rotationParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> RotationParams {
    get { return rotationParams_; }
  }

  /// <summary>Field number for the "CenterofMassParams" field.</summary>
  public const int CenterofMassParamsFieldNumber = 3;
  private static readonly pb::FieldCodec<float> _repeated_centerofMassParams_codec
      = pb::FieldCodec.ForFloat(26);
  private readonly pbc::RepeatedField<float> centerofMassParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> CenterofMassParams {
    get { return centerofMassParams_; }
  }

  /// <summary>Field number for the "ITParams" field.</summary>
  public const int ITParamsFieldNumber = 4;
  private static readonly pb::FieldCodec<float> _repeated_iTParams_codec
      = pb::FieldCodec.ForFloat(34);
  private readonly pbc::RepeatedField<float> iTParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> ITParams {
    get { return iTParams_; }
  }

  /// <summary>Field number for the "mass" field.</summary>
  public const int MassFieldNumber = 5;
  private float mass_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public float Mass {
    get { return mass_; }
    set {
      mass_ = value;
    }
  }

  /// <summary>Field number for the "shape" field.</summary>
  public const int ShapeFieldNumber = 6;
  private global::ObjectSpecs shape_;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public global::ObjectSpecs Shape {
    get { return shape_; }
    set {
      shape_ = value;
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as LinkStorage);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(LinkStorage other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if(!positionParams_.Equals(other.positionParams_)) return false;
    if(!rotationParams_.Equals(other.rotationParams_)) return false;
    if(!centerofMassParams_.Equals(other.centerofMassParams_)) return false;
    if(!iTParams_.Equals(other.iTParams_)) return false;
    if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Mass, other.Mass)) return false;
    if (!object.Equals(Shape, other.Shape)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    hash ^= positionParams_.GetHashCode();
    hash ^= rotationParams_.GetHashCode();
    hash ^= centerofMassParams_.GetHashCode();
    hash ^= iTParams_.GetHashCode();
    if (Mass != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Mass);
    if (shape_ != null) hash ^= Shape.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    positionParams_.WriteTo(output, _repeated_positionParams_codec);
    rotationParams_.WriteTo(output, _repeated_rotationParams_codec);
    centerofMassParams_.WriteTo(output, _repeated_centerofMassParams_codec);
    iTParams_.WriteTo(output, _repeated_iTParams_codec);
    if (Mass != 0F) {
      output.WriteRawTag(45);
      output.WriteFloat(Mass);
    }
    if (shape_ != null) {
      output.WriteRawTag(50);
      output.WriteMessage(Shape);
    }
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    size += positionParams_.CalculateSize(_repeated_positionParams_codec);
    size += rotationParams_.CalculateSize(_repeated_rotationParams_codec);
    size += centerofMassParams_.CalculateSize(_repeated_centerofMassParams_codec);
    size += iTParams_.CalculateSize(_repeated_iTParams_codec);
    if (Mass != 0F) {
      size += 1 + 4;
    }
    if (shape_ != null) {
      size += 1 + pb::CodedOutputStream.ComputeMessageSize(Shape);
    }
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(LinkStorage other) {
    if (other == null) {
      return;
    }
    positionParams_.Add(other.positionParams_);
    rotationParams_.Add(other.rotationParams_);
    centerofMassParams_.Add(other.centerofMassParams_);
    iTParams_.Add(other.iTParams_);
    if (other.Mass != 0F) {
      Mass = other.Mass;
    }
    if (other.shape_ != null) {
      if (shape_ == null) {
        shape_ = new global::ObjectSpecs();
      }
      Shape.MergeFrom(other.Shape);
    }
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10:
        case 13: {
          positionParams_.AddEntriesFrom(input, _repeated_positionParams_codec);
          break;
        }
        case 18:
        case 21: {
          rotationParams_.AddEntriesFrom(input, _repeated_rotationParams_codec);
          break;
        }
        case 26:
        case 29: {
          centerofMassParams_.AddEntriesFrom(input, _repeated_centerofMassParams_codec);
          break;
        }
        case 34:
        case 37: {
          iTParams_.AddEntriesFrom(input, _repeated_iTParams_codec);
          break;
        }
        case 45: {
          Mass = input.ReadFloat();
          break;
        }
        case 50: {
          if (shape_ == null) {
            shape_ = new global::ObjectSpecs();
          }
          input.ReadMessage(shape_);
          break;
        }
      }
    }
  }

}

public sealed partial class ObjectSpecs : pb::IMessage<ObjectSpecs> {
  private static readonly pb::MessageParser<ObjectSpecs> _parser = new pb::MessageParser<ObjectSpecs>(() => new ObjectSpecs());
  private pb::UnknownFieldSet _unknownFields;
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pb::MessageParser<ObjectSpecs> Parser { get { return _parser; } }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public static pbr::MessageDescriptor Descriptor {
    get { return global::StorageprotoReflection.Descriptor.MessageTypes[5]; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  pbr::MessageDescriptor pb::IMessage.Descriptor {
    get { return Descriptor; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObjectSpecs() {
    OnConstruction();
  }

  partial void OnConstruction();

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObjectSpecs(ObjectSpecs other) : this() {
    type_ = other.type_;
    scaleParams_ = other.scaleParams_.Clone();
    _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public ObjectSpecs Clone() {
    return new ObjectSpecs(this);
  }

  /// <summary>Field number for the "Type" field.</summary>
  public const int TypeFieldNumber = 1;
  private string type_ = "";
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public string Type {
    get { return type_; }
    set {
      type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
    }
  }

  /// <summary>Field number for the "ScaleParams" field.</summary>
  public const int ScaleParamsFieldNumber = 2;
  private static readonly pb::FieldCodec<float> _repeated_scaleParams_codec
      = pb::FieldCodec.ForFloat(18);
  private readonly pbc::RepeatedField<float> scaleParams_ = new pbc::RepeatedField<float>();
  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public pbc::RepeatedField<float> ScaleParams {
    get { return scaleParams_; }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override bool Equals(object other) {
    return Equals(other as ObjectSpecs);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public bool Equals(ObjectSpecs other) {
    if (ReferenceEquals(other, null)) {
      return false;
    }
    if (ReferenceEquals(other, this)) {
      return true;
    }
    if (Type != other.Type) return false;
    if(!scaleParams_.Equals(other.scaleParams_)) return false;
    return Equals(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override int GetHashCode() {
    int hash = 1;
    if (Type.Length != 0) hash ^= Type.GetHashCode();
    hash ^= scaleParams_.GetHashCode();
    if (_unknownFields != null) {
      hash ^= _unknownFields.GetHashCode();
    }
    return hash;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public override string ToString() {
    return pb::JsonFormatter.ToDiagnosticString(this);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void WriteTo(pb::CodedOutputStream output) {
    if (Type.Length != 0) {
      output.WriteRawTag(10);
      output.WriteString(Type);
    }
    scaleParams_.WriteTo(output, _repeated_scaleParams_codec);
    if (_unknownFields != null) {
      _unknownFields.WriteTo(output);
    }
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public int CalculateSize() {
    int size = 0;
    if (Type.Length != 0) {
      size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
    }
    size += scaleParams_.CalculateSize(_repeated_scaleParams_codec);
    if (_unknownFields != null) {
      size += _unknownFields.CalculateSize();
    }
    return size;
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(ObjectSpecs other) {
    if (other == null) {
      return;
    }
    if (other.Type.Length != 0) {
      Type = other.Type;
    }
    scaleParams_.Add(other.scaleParams_);
    _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
  }

  [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
  public void MergeFrom(pb::CodedInputStream input) {
    uint tag;
    while ((tag = input.ReadTag()) != 0) {
      switch(tag) {
        default:
          _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
          break;
        case 10: {
          Type = input.ReadString();
          break;
        }
        case 18:
        case 21: {
          scaleParams_.AddEntriesFrom(input, _repeated_scaleParams_codec);
          break;
        }
      }
    }
  }

}

#endregion


#endregion Designer generated code
